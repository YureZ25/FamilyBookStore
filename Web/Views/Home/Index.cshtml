@using Data.Enums
@using Data.Extensions

@model IEnumerable<StoreGetVM>

@section Scripts
{
    <script src="~/dist/index.entry.js" defer></script>
}

@{
    ViewData["Title"] = "Главная";
}

<div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 g-4">
    @foreach (var store in Model)
    {
        <div class="col">
            <div navigate asp-controller="Store" asp-action="StoreBookList" asp-route-id="@store.Id" class="card h-100 text-center">
                <div class="card-body">
                    <h5 class="card-title">@store.Name</h5>
                </div>
                <div class="row row-cols-3 gy-2 h-100">
                    @foreach (var book in store.Books)
                    {
                        <div class="col">
                            <div class="card m-1">
                                <img src="@(Url.Action("Image", "Book", new { bookId = book.Id }))" class="card-img-bottom">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="row mt-4">
    <div class="col">
        <ul class="nav nav-tabs" role="tablist">
            @foreach (var status in Enum.GetValues<BookStatus>().WithDescription())
            {
                <li class="nav-item" role="presentation">
                    <button class="nav-link" type="button" data-bs-toggle="tab" data-bs-target="#@status" role="tab">@status.GetDescription()</button>
                </li>
            }
        </ul>
        <div class="tab-content">
            @foreach (var status in Enum.GetValues<BookStatus>().WithDescription())
            {
                <div class="tab-pane fade" id="@status" role="tabpanel">
                    <vc:books-by-status book-status="@status" />
                </div>
            }
        </div>
    </div>
</div>
