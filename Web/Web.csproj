<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>2743c472-8cd1-40aa-a1ba-ad0f8579e3f5</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	</PropertyGroup>

	<ItemGroup>
		<ProjectReference Include="..\Services\Services.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="sql-scripts/**/*.sql">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.21.0" />
	</ItemGroup>

	<Target Name="NpmInstall" BeforeTargets="Build" Condition="$(DISABLE_NPM_BUILD) != 'True' And !Exists('$(MpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(MpaRoot)" Command="npm install" />
	</Target>

	<Target Name="NpmRunBuild" BeforeTargets="Build" DependsOnTargets="NpmInstall" Condition="$(DISABLE_NPM_BUILD) != 'True'">
		<Exec WorkingDirectory="$(MpaRoot)" Command="npm run build" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" DependsOnTargets="NpmInstall"  Condition="$(DISABLE_NPM_BUILD) != 'True'">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(MpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(MpaRoot)" Command="npm run build:prod" />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(WWWRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="NpmClean" BeforeTargets="Clean">
		<RemoveDir Directories="$(WWWRoot)dist" />
		<RemoveDir Directories="$(MpaRoot)node_modules" />
	</Target>

</Project>
